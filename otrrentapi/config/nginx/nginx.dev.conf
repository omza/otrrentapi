daemon off;

worker_processes 2;

user nginx;

# 'user nobody nobody;' for systems with 'nobody' as a group instead
pid /usr/log/nginx.pid;
#error_log /usr/log/nginx.error.log;

events {
	worker_connections 1024; # increase if you have lots of clients
	accept_mutex off; # set to 'on' if nginx worker_processes > 1
	# 'use epoll;' to enable for Linux 2.6+
	# 'use kqueue;' to enable for FreeBSD, OSX
}

http {

	include /etc/nginx/mime.types;
	# fallback in case we can't determine a type
	default_type application/octet-stream;
  
	sendfile on;

	#log
	access_log /usr/log/nginx.access.log;
	error_log /usr/log/nginx.error.log;

	upstream app_server {
		server unix:/tmp/gunicorn.sock fail_timeout=0;
	}
	
	# redirect to https
	server {
		listen 80 default_server;
		listen [::]:80 default_server;
		server_name _;
		return 301 https://$host$request_uri;
	}


	# reverse proxy to upstream
	server {
		
		listen 443 ssl;
		listen [::]:443 ssl;

		# set the correct host(s) for your site
		server_name *.devdiboards.com;

		charset utf-8;
		#client_max_body_size 4G;
		#keepalive_timeout 5;

		# enable SSL
		ssl_certificate	/secrets/default.crt;
		ssl_certificate_key	/secrets/default.key;
		ssl on;
		ssl_session_cache  builtin:1000  shared:SSL:10m;
		ssl_protocols  TLSv1 TLSv1.1 TLSv1.2;
		ssl_ciphers HIGH:!aNULL:!eNULL:!EXPORT:!CAMELLIA:!DES:!MD5:!PSK:!RC4;
		ssl_prefer_server_ciphers on;
		
		#enable CORS
		location * {
			if ($request_method = 'OPTIONS') {
				# CORS configuration, from http://enable-cors.org/server_nginx.html
				add_header 'Access-Control-Allow-Origin' '*';
				#
				#     Om nom nom cookies
				#
				add_header 'Access-Control-Allow-Credentials' 'true';
				add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
				#
				# Custom headers and headers various browsers *should* be OK with but aren't
				#
				add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
				#
				# Tell client that this pre-flight info is valid for 20 days
				#
				add_header 'Access-Control-Max-Age' 1728000;
				add_header 'Content-Type' 'text/plain charset=UTF-8';
				add_header 'Content-Length' 0;
				return 204;
			}
			if ($request_method = 'POST') {
				add_header 'Access-Control-Allow-Origin' '*';
				add_header 'Access-Control-Allow-Credentials' 'true';
				add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
				add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
			}
			if ($request_method = 'GET') {
				add_header 'Access-Control-Allow-Origin' '*';
				add_header 'Access-Control-Allow-Credentials' 'true';
				add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
				add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
			}
		}

		# reverse proxy
		location / {
			proxy_pass http://app_server;
			proxy_read_timeout 90;

			# enable proxy
			proxy_redirect		off;
			proxy_set_header	X-Forwarded-For			$proxy_add_x_forwarded_for;
			proxy_set_header	X-Forwarded-Proto		$scheme;
			proxy_set_header	Host					$host;
			proxy_set_header	X-Real-IP				$remote_addr;

		}
	}
}


